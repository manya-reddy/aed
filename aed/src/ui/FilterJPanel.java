package ui;


import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.table.DefaultTableModel;
import model.Emp;
import model.Empdetails;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Manya
 */
public class FilterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FilterJPanel
     */
    Empdetails empHistory;
    ArrayList tempEmp = new ArrayList<Emp>();
    public FilterJPanel(Empdetails empHistory) {
        initComponents();
        this.empHistory = empHistory;
        
        ArrayList<String> Position = new ArrayList<String>();
        ArrayList<String> EName = new ArrayList<String>();
        ArrayList<String>  Level= new ArrayList<String>();
        for (Emp e: empHistory.getEmpHistory()){
                 
//            if(c.isAvailability()){
//                Position.add("Available");
//            }
//            else{
//                Position.add("Unavailable");
//            }
               EName.add(e.getName());
            Level.add(e.getLevel());
            Position.add(e.gettitle());
        }
        Set<String> UniquePosition = new HashSet<String>(Position);
       Set<String> UniqueEName = new HashSet<String>(EName);
        Set<String> UniqueLevel = new HashSet<String>(Level);
        
        for (String pos: UniquePosition){
           cmbPosition.addItem(pos); 
        }
        for (String eName: UniqueEName){
           cmbEmpName.addItem(eName); 
        }
        for (String level: UniqueLevel){
           cmbLevel.addItem(level);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblEmpName = new javax.swing.JLabel();
        cmbEmpName = new javax.swing.JComboBox<>();
        cmbLevel = new javax.swing.JComboBox<>();
        btnAge = new javax.swing.JButton();
        txtAge = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbPosition = new javax.swing.JComboBox<>();
        btnStartDate = new javax.swing.JButton();
        txtStartDate = new javax.swing.JTextField();
        btnEmpId = new javax.swing.JButton();
        txtEmpId = new javax.swing.JTextField();
        JScrollPane1 = new javax.swing.JScrollPane();
        tblSearchView = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Search Employee");

        lblEmpName.setText("Employee By name");

        cmbEmpName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Employee" }));
        cmbEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEmpNameActionPerformed(evt);
            }
        });

        cmbLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Level" }));
        cmbLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLevelActionPerformed(evt);
            }
        });

        btnAge.setText("Search By Age");
        btnAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgeActionPerformed(evt);
            }
        });

        txtAge.setToolTipText("Input Age");

        jLabel2.setText("Search By Employee Position");

        cmbPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Position" }));
        cmbPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPositionActionPerformed(evt);
            }
        });

        btnStartDate.setText("Search By Start Date");
        btnStartDate.setToolTipText("");
        btnStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartDateActionPerformed(evt);
            }
        });

        txtStartDate.setToolTipText("Input Start Date");

        btnEmpId.setText("Employee Id");
        btnEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpIdActionPerformed(evt);
            }
        });

        txtEmpId.setToolTipText("Input Emp Id");
        txtEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIdActionPerformed(evt);
            }
        });

        tblSearchView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee Name", "Employee Id", "Age", "Gender", "Start date", "Level", "Team Info", "Position title", "Cell phone number", "Email address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JScrollPane1.setViewportView(tblSearchView);

        jLabel1.setText("Search By Level");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JScrollPane1))
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(lblEmpName))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnStartDate)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(119, 119, 119)
                                .addComponent(btnAge))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEmpId)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(txtEmpId))
                        .addGap(0, 95, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpName)
                    .addComponent(cmbEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStartDate)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEmpId)
                    .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(JScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIdActionPerformed

    private void cmbEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEmpNameActionPerformed
        // TODO add your handling code here:
        String selectedEName = cmbEmpName.getSelectedItem().toString();
        tempEmp.clear();
        
        for (Emp e:empHistory.getEmpHistory()){
            if (e.getName()==selectedEName){
                tempEmp.add(e);
            }
        }  
        populateSelectedTable(tempEmp, tempEmp.size());
//        String selectedEName= cmbEmpName.getSelectedItem().toString();
//        tempEmp.clear();
//
//        for (Employee e:empHistory.getEmpHistory()){
//            if (e.getName()== selectedEName ){
//                tempEmp.add(e);
//            }
//        }
//        populateSelectedTable(tempEmp, tempEmp.size());

    }//GEN-LAST:event_cmbEmpNameActionPerformed

    private void cmbLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLevelActionPerformed
        // TODO add your handling code here:
        String selectedLevel = cmbLevel.getSelectedItem().toString();
        tempEmp.clear();

        for (Emp e:empHistory.getEmpHistory()){
            if (e.getLevel()==selectedLevel ){
                tempEmp.add(e);
            }
        }
        populateSelectedTable(tempEmp, tempEmp.size());
 
        
    }//GEN-LAST:event_cmbLevelActionPerformed

    private void cmbPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPositionActionPerformed
        // TODO add your handling code here:
        String selectedPosition = cmbPosition.getSelectedItem().toString();
        tempEmp.clear();

        for (Emp e:empHistory.getEmpHistory()){
            if (e.gettitle()==selectedPosition ){
                tempEmp.add(e);
            }
        }
        populateSelectedTable(tempEmp, tempEmp.size());
 
    }//GEN-LAST:event_cmbPositionActionPerformed

    private void btnAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgeActionPerformed
        // TODO add your handling code here:
         tempEmp.clear();
        int selectedAge = Integer.parseInt(txtAge.getText());
        for (Emp e:empHistory.getEmpHistory()){
            if (e.getAge() == selectedAge){
                tempEmp.add(e);
            }
        }
        populateSelectedTable(tempEmp, tempEmp.size());
  
    }//GEN-LAST:event_btnAgeActionPerformed

    private void btnStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartDateActionPerformed
        // TODO add your handling code here:
        
        tempEmp.clear();
        String selectedStartDate = txtStartDate.getText();

        for (Emp e:empHistory.getEmpHistory()){
            if (e.getStartDate()== selectedStartDate){
                tempEmp.add(e);
            }
        }
        populateSelectedTable(tempEmp, tempEmp.size());
    
    }//GEN-LAST:event_btnStartDateActionPerformed

    private void btnEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpIdActionPerformed
        // TODO add your handling code here:
         tempEmp.clear();
        int selectedEmpId = Integer.parseInt(txtEmpId.getText());
        for (Emp e:empHistory.getEmpHistory()){
            if (e.getEmployeeId()==selectedEmpId){
                tempEmp.add(e);
            }
        }
        populateSelectedTable(tempEmp, tempEmp.size());
 
        
    }//GEN-LAST:event_btnEmpIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane1;
    private javax.swing.JButton btnAge;
    private javax.swing.JButton btnEmpId;
    private javax.swing.JButton btnStartDate;
    private javax.swing.JComboBox<String> cmbEmpName;
    private javax.swing.JComboBox<String> cmbLevel;
    private javax.swing.JComboBox<String> cmbPosition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblEmpName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblSearchView;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtStartDate;
    // End of variables declaration//GEN-END:variables

    private void populateSelectedTable(ArrayList<Emp> selectedEmp, int limit) {
  
        DefaultTableModel model = (DefaultTableModel) tblSearchView.getModel();
        model.setRowCount(0);
        int i = 0;  
        
        for (Emp c : selectedEmp){
            if (i >= limit){
                break;
            }            
            Object[] row = new Object[10];
            
            row[0] = c;
            row[1] = c.getEmployeeId();
            row[2] = c.getAge();
            row[3] = c.getGender();
            row[4] = c.getStartDate();
            row[5] = c.getLevel();
            row[6] = c.getTeamInfo();
            row[7] = c.gettitle();
            row[8] = c.getphno();
            row[9] = c.getEmailid();
            model.addRow(row);
        
}}

}
